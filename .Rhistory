d <- read.table("http://www.stat.tamu.edu/~sheather/book/docs/datasets/production.txt",
header = T)
plot(200, 200, xlim = c(50, 350), ylim = c(140, 260),
type = "n", xlab = "Run Size", ylab = "Run Time")
points(d$RunSize, d$RunTime)
m1 <- lm(RunTime ~ RunSize, data = d)
abline(m1)
plot(200, 200, xlim = c(50, 350), ylim = c(140, 260),
type = "n", xlab = "Run Size", ylab = "Run Time")
points(d$RunSize, d$RunTime)
m1 <- lm(RunTime ~ RunSize, data = d)
abline(m1)
abline(m1, col = "orange", lwd = 2)
y_gen <- m1$fit + rnorm(length(m1$fit), mean = 0, sd = sqrt(sum(m1$res^2)/m1$df.res))
plot(200, 200, xlim = c(50, 350), ylim = c(140, 260),
type = "n", xlab = "Run Size", ylab = "Run Time")
abline(m1, col = "orange", lwd = 2)
points(d$RunSize, y_gen, pch = 16, col = "steelblue")
d <- read.table("http://www.stat.tamu.edu/~sheather/book/docs/datasets/production.txt",
header = T)
plot(200, 200, xlim = c(50, 350), ylim = c(140, 260),
type = "n", xlab = "Run Size", ylab = "Run Time")
points(d$RunSize, d$RunTime)
m1 <- lm(RunTime ~ RunSize, data = d)
abline(m1)
abline(m1, col = "orange", lwd = 2)
xlims <-  c(50, 350)
ylims <-  c(140, 260)
plot(200, 200, xlim = xlims, ylim = ylims,
type = "n", xlab = "Run Size", ylab = "Run Time")
points(d$RunSize, d$RunTime)
m1 <- lm(RunTime ~ RunSize, data = d)
abline(m1)
abline(m1, col = "orange", lwd = 2)
x <- seq(xlims[1], xlims[2], length.out = 1000)
y <- seq(ylims[1], ylims[2], length.out = 1000)
?predict
predict(m1, 100)
predict(m1, list(100))
predict(m1, RunSize = 100)
x <- seq(xlims[1], xlims[2], length.out = 1000)
y <- seq(ylims[1], ylims[2], length.out = 1000)
x <- 1:3
y <- 1:3
outer(x, y)
?rep
seq(1:3, each = 3)
seq(1, 3, each = 3)
rep(1:3, each = 3)
rep(1:3,3)
x <- rep(seq(xlims[1], xlims[2], length.out = 200), 200)
y <- rep(seq(ylims[1], ylims[2], length.out = 200, each = 200)
y <- rep(seq(ylims[1], ylims[2], length.out = 200, each = 200))
x <- rep(seq(xlims[1], xlims[2], length.out = 200), 200)
y <- rep(seq(ylims[1], ylims[2], length.out = 200), each = 200)
length(x)
length(y)
f_gen <- dnorm(y, mean = m1$coef[1] + m1$coef[2]*x,
sd = sqrt(sum(m1$res^2)/m1$df.res))
length(f_gen)
?image
require(grDevices) # for colours
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
image(z, axes = FALSE, main = "Math can be beautiful ...",
xlab = expression(cos(r^2) * e^{-r/6}))
contour(z, add = TRUE, drawlabels = FALSE)
require(knitr)
require(ggplot2)
opts_chunk$set(warning=FALSE,message=FALSE)
library(gridExtra)
p1 <- ggplot(d,aes(x=activity,y=homework)) + geom_point() +
scale_x_continuous(expand=c(0.02,0)) +
scale_y_continuous(expand=c(0.02,0)) +
theme_bw() +
theme(legend.position="none",plot.margin=unit(c(0,0,0,0),"points"))
theme0 <- function(...) theme( legend.position = "none",
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.margin = unit(0,"null"),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.length = unit(0,"null"),
axis.ticks.margin = unit(0,"null"),
panel.border=element_rect(color=NA),...)
p2 <- ggplot(d,aes(x=activity)) +
geom_density(alpha=0.5, color = "orange") +
scale_x_continuous(breaks=NULL,expand=c(0.02,0)) +
scale_y_continuous(breaks=NULL,expand=c(0.02,0)) +
theme_bw() +
theme0(plot.margin = unit(c(1,0,0,2.2),"lines"))
p3 <- ggplot(d,aes(x=homework)) +
geom_density(alpha=0.5, color = "steelblue") +
coord_flip()  +
scale_x_continuous(labels = NULL,breaks=NULL,expand=c(0.02,0)) +
scale_y_continuous(labels = NULL,breaks=NULL,expand=c(0.02,0)) +
theme_bw() +
theme0(plot.margin = unit(c(0,1,1.2,0),"lines"))
grid.arrange(arrangeGrob(p2,ncol=2,widths=c(3,1)),
arrangeGrob(p1,p3,ncol=2,widths=c(3,1)),
heights=c(1,3))
ggplot(data=d, aes(x=activity, y=homework)) + geom_jitter()  + theme(legend.position="none") + labs(title="")
```
d <- read.csv("submit-times.csv")
d[,1] <- as.character(d[,1])
d[,2] <- as.character(d[,2])
d <- d[d[,1] != "-" & d[,2] != "-",]
a <- d[,1]
datestamp <- unlist(strsplit(a, ", "))[seq(2, length(a)*3, 3)]
timestamp <- unlist(strsplit(a, ", "))[seq(3, length(a)*3, 3)]
x <- paste(datestamp, timestamp)
dt <- strptime(x, "%d %B %Y %I:%M %p")
dt <- as.POSIXlt(x, format = "%d %B %Y %I:%M %p")
a <- dt$min*60 + dt$hour*60*60 + dt$mday*24*60*60
b <- d[,2]
datestamp <- unlist(strsplit(b, ", "))[seq(2, length(b)*3, 3)]
timestamp <- unlist(strsplit(b, ", "))[seq(3, length(b)*3, 3)]
x <- paste(datestamp, timestamp)
dt <- strptime(x, "%d %B %Y %I:%M %p")
dt <- as.POSIXlt(x, format = "%d %B %Y %I:%M %p")
b <- dt$min*60 + dt$hour*60*60 + dt$mday*24*60*60
d <- data.frame(activity = a, homework = b)
dd <- data.frame(submit_time = c(a, b), assmnt = c(rep("activity", length(a)),
rep("homework", length(b))))
par(mfrow = c(2,1))
plot(density(d$activity), xlim = c(1000000, 1500000), main = "")
plot(density(d$homework), xlim = c(1000000, 1500000), main = "")
plot(density(d$activity), xlim = c(1000000, 1500000), ylim = c(0, 1.5*10^(-5)),
main = "", col = "orange")
lines(density(d$homework)$x, density(d$homework)$y, col = "steelblue")
abline(v = 14*24*60*60 + 15*60*60)
text(1330000, 1.35*10^(-5), "Homework due")
ggplot(data=d, aes(x=activity, y=homework)) + geom_jitter()  + theme(legend.position="none") + labs(title="")
```
## Marginal and Joint
```{r, echo=FALSE}
library(gridExtra)
p1 <- ggplot(d,aes(x=activity,y=homework)) + geom_point() +
scale_x_continuous(expand=c(0.02,0)) +
scale_y_continuous(expand=c(0.02,0)) +
theme_bw() +
theme(legend.position="none",plot.margin=unit(c(0,0,0,0),"points"))
theme0 <- function(...) theme( legend.position = "none",
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.margin = unit(0,"null"),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.length = unit(0,"null"),
axis.ticks.margin = unit(0,"null"),
panel.border=element_rect(color=NA),...)
p2 <- ggplot(d,aes(x=activity)) +
geom_density(alpha=0.5, color = "orange") +
scale_x_continuous(breaks=NULL,expand=c(0.02,0)) +
scale_y_continuous(breaks=NULL,expand=c(0.02,0)) +
theme_bw() +
theme0(plot.margin = unit(c(1,0,0,2.2),"lines"))
p3 <- ggplot(d,aes(x=homework)) +
geom_density(alpha=0.5, color = "steelblue") +
coord_flip()  +
scale_x_continuous(labels = NULL,breaks=NULL,expand=c(0.02,0)) +
scale_y_continuous(labels = NULL,breaks=NULL,expand=c(0.02,0)) +
theme_bw() +
theme0(plot.margin = unit(c(0,1,1.2,0),"lines"))
grid.arrange(arrangeGrob(p2,ncol=2,widths=c(3,1)),
arrangeGrob(p1,p3,ncol=2,widths=c(3,1)),
heights=c(1,3))
require(ks)
bd <- kde(as.matrix(d))
plot(bd)
plot(bd)
plot(bd, display = "image")
plot(bd, display = "persp")
p1 <- ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width,colour=factor(Species))) + geom_point() +
scale_x_continuous(expand=c(0.02,0)) +
scale_y_continuous(expand=c(0.02,0)) +
theme_bw() +
theme(legend.position="none",plot.margin=unit(c(0,0,0,0),"points"))
theme0 <- function(...) theme( legend.position = "none",
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.margin = unit(0,"null"),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.length = unit(0,"null"),
axis.ticks.margin = unit(0,"null"),
panel.border=element_rect(color=NA),...)
p2 <- ggplot(iris,aes(x=Sepal.Length,colour=factor(Species),fill=factor(Species))) +
geom_density(alpha=0.5) +
scale_x_continuous(breaks=NULL,expand=c(0.02,0)) +
scale_y_continuous(breaks=NULL,expand=c(0.02,0)) +
theme_bw() +
theme0(plot.margin = unit(c(1,0,0,2.2),"lines"))
p3 <- ggplot(iris,aes(x=Sepal.Width,colour=factor(Species),fill=factor(Species))) +
geom_density(alpha=0.5) +
coord_flip()  +
scale_x_continuous(labels = NULL,breaks=NULL,expand=c(0.02,0)) +
scale_y_continuous(labels = NULL,breaks=NULL,expand=c(0.02,0)) +
theme_bw() +
theme0(plot.margin = unit(c(0,1,1.2,0),"lines"))
grid.arrange(arrangeGrob(p2,ncol=2,widths=c(3,1)),
arrangeGrob(p1,p3,ncol=2,widths=c(3,1)),
heights=c(1,3))
ggplot(iris_slice,aes(x=Sepal.Width,colour=factor(Species),fill=factor(Species))) +
geom_density(alpha=0.5) +
theme_bw() +
coord_flip()
iris_slice <- iris[iris$Sepal.Length > 5.0 & iris$Sepal.Length < 6.0, ]
nrow(iris_slice)
ggplot(iris_slice,aes(x=Sepal.Width,colour=factor(Species),fill=factor(Species))) +
geom_density(alpha=0.5) +
theme_bw() +
coord_flip()
library(rgl)
plot3d(iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, col="red", size=3)
fhat <- kde(x=iris[,1:3])
plot(fhat)
class(fhat)
?plot.kde
