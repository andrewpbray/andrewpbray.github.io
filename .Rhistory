i <- 2
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
i <- 3
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
i <- 5
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
i <- 5
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x[1:70], y[1:70], col = COL[2], lCol = COL[1], lwd = 3, xlim = range(x), ylim = range(y))
i <- 5
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x[1:70], y[1:70], col = COL[2], lCol = COL[1], lwd = 3, xlim = range(x), ylim = range(y))
library(openintro)
COL <- c('#55000088','#225588')
set.seed(238)
n <- c(50, 25, 78, 55, 70, 150)
m <- c(12, -4, 7, -19, 0, 40)
xr <- list(0.3, c(2), 1.42, runif(4,1.45,1.55), 5.78, -0.6)
yr <- list(-4, c(-8), 19, c(-17,-20,-21,-19), 12, -23.2)
i <- 1
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
i <- 2
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
i <- 3
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
i <- 5
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
library(faraway)
install.packages("faraway")
library(faraway)
data(star)
par(mar=c(4,4,2,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(light ~ temp, data = star, pch=19, col=COL[2], xlab = "log(temp)", ylab = "log(light intensity)")
abline(lm(light[temp>4]~temp[temp>4], data = star), col = COL[1], lwd = 3)
abline(lm(light~temp, data = star), col = "darkgreen", lwd = 3, lty = 2)
legend("top", inset = 0.05, c("w/ outliers","w/o outliers"), lty = c(2,1), lwd = c(2,3), col = c("darkgreen",COL[1]))
?hatvalues
i <- 2
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
set.seed(12)
i <- 2
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
hatvalues(lm(y ~ x))
sum(hatvalues(lm(y ~ x)))
y
x
set.seed(12)
i <- 2
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
y <- y - mean(y)
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
hatvalues(lm(y ~ x))
sum(hatvalues(lm(y ~ x)))
?hatvalues
lm.influence(lm(y ~ x))$hat
sum(lm.influence(lm(y ~ x))$hat)
hist(lm.influence(lm(y ~ x))$hat)
?par
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
which.max(x)
length(x)
which.min(x)
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
h <- lm.influence(lm(y ~ x))$hat
for(i in c(1, 16, 25, 26)) {
text(x[i], y[i], h[i])
}
plot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
m1 <- lm(y ~ x)
plot(x, y, col = COL[2], pch = 16, lwd = 3)
abline(m1, col = COL[1])
abline(m1, col = COL[1], lwd = 3)
set.seed(12)
i <- 2
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
y <- y - mean(y)
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
m1 <- lm(y ~ x)
plot(x, y, col = COL[2], pch = 16)
abline(m1, col = COL[1], lwd = 3)
h <- lm.influence(lm(y ~ x))$hat
?par
plot(x, y, col = COL[2], pch = 16, pointsize = 1.5)
plot(x, y, col = COL[2], pch = 16, pointsize = 5)
m1 <- lm(y ~ x)
plot(x, y, col = COL[2], pch = 16)
m1 <- lm(y ~ x)
plot(x, y, col = COL[2], pch = 16)
abline(m1, col = COL[1], lwd = 3)
h <- lm.influence(lm(y ~ x))$hat
for(i in c(1, 16, 25, 26)) {
text(x[i], y[i], round(h[i], 2))
}
text(x[i], y[i] + .3, round(h[i], 2))
m1 <- lm(y ~ x)
plot(x, y, col = COL[2], pch = 16)
abline(m1, col = COL[1], lwd = 3)
h <- lm.influence(lm(y ~ x))$hat
for(i in c(1, 16, 25, 26)) {
text(x[i], y[i] + .3, round(h[i], 2))
}
m1 <- lm(y ~ x)
h <- lm.influence(lm(y ~ x))$hat
hist(h)
abline(v = 4/length(y))
par(mar=c(4,4,2,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(light ~ temp, data = star, pch=19, col=COL[2], xlab = "log(temp)", ylab = "log(light intensity)")
i <- 5
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mfrow = c(1, 2))
plot(x, y, col = COL[2])
abline(lm(y~x), col = COL[1], lwd = 3)
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x[1:70], y[1:70], col = COL[2], lCol = COL[1], lwd = 3, xlim = range(x), ylim = range(y))
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x[1:70], y[1:70], col = COL[2], lCol = COL[1], lwd = 3, xlim = range(x), ylim = range(y))
i <- 5
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x, y, col = COL[2], lCol = COL[1], lwd = 3)
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.5,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(2,1))
lmPlot(x[1:70], y[1:70], col = COL[2], lCol = COL[1], lwd = 3, xlim = range(x), ylim = range(y))
i <- 5
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mfrow = c(1, 2))
plot(x, y, col = COL[2], pch = 16)
abline(lm(y ~ x), col = COL[1], lwd = 3)
x2 <- x[1:70]
y2 <- y[1:70]
plot(x2, y2, col = COL[2], pch = 16)
abline(lm(y2 ~ x2), col = COL[1], lwd = 3)
plot(x2, y2, col = COL[2], pch = 16, xlim = range(x))
i <- 5
x <- runif(n[i])
y <- m[i]*x + rnorm(n[i])
x <- c(x,xr[[i]])
y <- c(y,yr[[i]])
par(mfrow = c(1, 2))
plot(x, y, col = COL[2], pch = 16)
abline(lm(y ~ x), col = COL[1], lwd = 3)
x2 <- x[1:70]
y2 <- y[1:70]
plot(x2, y2, col = COL[2], pch = 16, xlim = range(x), ylim = range(y))
abline(lm(y2 ~ x2), col = COL[1], lwd = 3)
par(mar=c(4,4,2,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(light ~ temp, data = star, pch=19, col=COL[2], xlab = "log(temp)", ylab = "log(light intensity)")
abline(lm(light~temp, data = star), col = "darkgreen", lwd = 3, lty = 2)
abline(lm(light[temp>4]~temp[temp>4], data = star), col = COL[1], lwd = 3)
legend("top", inset = 0.05, c("w/ outliers","w/o outliers"), lty = c(2,1), lwd = c(2,3), col = c("darkgreen",COL[1]))
par(mar=c(4,4,2,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(light ~ temp, data = star, pch=19, col=COL[2], xlab = "log(temp)", ylab = "log(light intensity)")
abline(lm(light~temp, data = star), col = "darkgreen", lwd = 3, lty = 2)
abline(lm(light[temp>4]~temp[temp>4], data = star), col = COL[1], lwd = 3)
legend("top", inset = 0.05, c("w/ outliers","w/o outliers"), lty = c(2,1), lwd = c(2,3), col = c("darkgreen",COL[1]))
m1 <- lm(light~temp, data = star)
plot(m1)
m1 <- lm(light~temp, data = star)
plot(m1, 4)
plot(m1, 5)
## Outliers, leverage, influence {.build}
twins <- read.csv("http://andrewpbray.github.io/data/twins.csv")
View(twins)
plot(Foster ~ Biological, data = twins)
LA <- read.csv("http://andrewpbray.github.io/data/LAed.csv")
View(LA)
n <- 60
beta_0 <- 12
beta_1 <- .7
sigma <- 2
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x # mean function
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
abline(a = beta_0, b = beta_1, col = "orange", lwd = 2) # add mean function
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
n <- 300
beta_0 <- 12
beta_1 <- .7
sigma <- 2
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x # mean function
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
abline(a = beta_0, b = beta_1, col = "orange", lwd = 2) # add mean function
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, .3)) # add generated data
type <- rep(c("Af", "Apf"), 9, 5)
WL <- c(1.72, 1.64, 1.74, 1.7, 1.82, 1.82, 1.9, 1.82, 2.08, 1.78, 1.86, 1.96, 2, 2, 1.96)
type <- rep(c("Af", "Apf"), c(9, 5))
type <- rep(c("Af", "Apf"), c(9, 6))
WL <- c(1.72, 1.64, 1.74, 1.7, 1.82, 1.82, 1.9, 1.82, 2.08, 1.78, 1.86, 1.96, 2, 2, 1.96)
AL <- c(1.24, 1.38, 1.36, 1.4, 1.38, 1.48, 1.38, 1.54, 1.56, 1.14, 1.2, 1.3, 1.26, 1.28, 1.18)
midges <- data.frame(type, WL, AL)
midges
library(ggplot2)
ggplot(midges, aes(x = WL, y = AL, col = type)) + geo_point()
ggplot(midges, aes(x = WL, y = AL, col = type)) + geom_point()
write.csv(midges, "midges.csv", row.names = FALSE)
midges <- read.csv("http://andrewpbray.github.io/data/midges.csv")
View(midges)
plot(AL ~ ML, data = midges)
library(ggplot2)
ggplot(midges, aes(x = WL, y = AL, col = type)) + geom_point()
apf <- subset(midges, type == "Apf")
af <- subset(midges, type == "Af")
mapf <- lm(AL ~ WL, data = apf)
maf <- lm(AL ~ WL, data = af)
plot(AL ~ WL, data = midges))
plot(AL ~ WL, data = midges)
abline(mapf)
abline(maf)
?points
plot(AL ~ WL, data = midges, type = "n")
points(apf$WL, apf$AL, pch = 16, col = "red")
points(af$WL, af$AL, pch = 16, col = "blue")
abline(mapf)
abline(maf)
par(xlim())
xx <- seq(1.6, 2.1, length.out = 500)
pi <- predict(apf, data.frame(WL = xx), interval = "prediction")
pi <- predict(mapf, data.frame(WL = xx), interval = "prediction")
lines(xx, pi[, 2], lty = 2)
lines(xx, pi[, 2], lty = 2, col = "red")
lines(xx, pi[, 3], lty = 2, col = "red")
?redict
?predict
?predict.lm
xx <- seq(1.6, 2.1, length.out = 500)
lvl <- .95
pi <- predict(mapf, data.frame(WL = xx), interval = "prediction", level = lvl)
lines(xx, pi[, 2], lty = 2, col = "red")
lines(xx, pi[, 3], lty = 2, col = "red")
pi <- predict(maf, data.frame(WL = xx), interval = "prediction", level = lvl)
lines(xx, pi[, 2], lty = 2, col = "blue")
lines(xx, pi[, 3], lty = 2, col = "blue")
lvl <- .85
pi <- predict(mapf, data.frame(WL = xx), interval = "prediction", level = lvl)
lines(xx, pi[, 2], lty = 2, col = "red")
lines(xx, pi[, 3], lty = 2, col = "red")
pi <- predict(maf, data.frame(WL = xx), interval = "prediction", level = lvl)
lines(xx, pi[, 2], lty = 2, col = "blue")
lines(xx, pi[, 3], lty = 2, col = "blue")
xx <- seq(1.6, 2.1, length.out = 500)
lvl <- .85
pi <- predict(mapf, data.frame(WL = xx), interval = "prediction", level = lvl)
lines(xx, pi[, 2], lty = 2, col = "red")
lines(xx, pi[, 3], lty = 2, col = "red")
pi <- predict(maf, data.frame(WL = xx), interval = "prediction", level = lvl)
lines(xx, pi[, 2], lty = 2, col = "blue")
lines(xx, pi[, 3], lty = 2, col = "blue")
plot(AL ~ WL, data = midges, type = "n")
points(apf$WL, apf$AL, pch = 16, col = "red")
points(af$WL, af$AL, pch = 16, col = "blue")
abline(mapf)
abline(maf)
xx <- seq(1.6, 2.1, length.out = 500)
lvl <- .85
pi <- predict(mapf, data.frame(WL = xx), interval = "prediction", level = lvl)
lines(xx, pi[, 2], lty = 2, col = "red")
lines(xx, pi[, 3], lty = 2, col = "red")
pi <- predict(maf, data.frame(WL = xx), interval = "prediction", level = lvl)
lines(xx, pi[, 2], lty = 2, col = "blue")
lines(xx, pi[, 3], lty = 2, col = "blue")
twins <- read.csv("http://andrewpbray.github.io/data/twins.csv")
plot(Foster ~ Biological, data = twins)
m1 <- lm(Foster ~ Biological, data = twins)
plot(m1)
ci <- confint(m1, "Biological")
ci
require(ggplot2)
ggplot(twins, aes(x = Biological, y = Foster, color = Social)) + geom_point()
LA <- read.csv("http://andrewpbray.github.io/data/LAed.csv")
plot(education ~ hispanic, data = LA)
m2 <- lm(education ~ hispanic, data = LA)
summary(m2)
plot(m1, 1)
plot(m2, 1)
plot(m2, 2)
plot(m2, 3)
plot(m2, 5)
predict(m2, data.frame("hispanic" = .5), interval = "prediction")
exp(0.13)
cleaning <- read.csv("http://www.stat.tamu.edu/~sheather/book/docs/datasets/cleaning.txt",
header = T)
View(cleaning)
cleaning <- read.delim("http://www.stat.tamu.edu/~sheather/book/docs/datasets/cleaning.txt",
header = T)
View(cleaning)
names(cleaning)
plot(Rooms ~ Crews, data = cleaning, pch = 16, color = "darkgreen")
plot(Rooms ~ Crews, data = cleaning, pch = 16, col = "darkgreen")
m1 <- lm(Rooms ~ Crews, data = cleaning)
summary(m1)$coef
plot(price ~ year, data = subset(pickups, year >= 1994), col = "steelblue", pch = 16)
m1 <- lm(Rooms ~ Crews, data = cleaning)
summary(m1)$coef
plot(Rooms ~ Crews, data = cleaning, pch = 16, col = "darkgreen")
abline(m1, lwd = 2)
predict(m1, data.frame(Crews = c(4, 16)), interval = "prediction")
lines(c(4, 4), c(pi[1, 2], pi[1, 3]), col = "tomato")
pi <- predict(m1, data.frame(Crews = c(4, 16)), interval = "prediction")
plot(Rooms ~ Crews, data = cleaning, pch = 16, col = "darkgreen")
abline(m1, lwd = 2)
lines(c(4, 4), c(pi[1, 2], pi[1, 3]), col = "tomato")
lines(c(4, 4), c(pi[1, 2], pi[1, 3]), col = "tomato", lwd = 2)
lines(c(4, 4), c(pi[2, 2], pi[2, 3]), col = "tomato", lwd = 2)
lines(c(16, 16), c(pi[2, 2], pi[2, 3]), col = "tomato", lwd = 2)
cleaning2 <- transform(cleaning, sqrtCrews = sqrt(Crews))
cleaning2 <- transform(cleaning2, sqrtRooms = sqrt(Rooms))
head(cleaning)
head(cleaning2)
cleaning2[1:2, ]
m2 <- lm(sqrtRooms ~ sqrtCrews, data = cleaning2)
par(mfrow = c(1, 2))
plot(m2, 1:2)
par(mfrow = c(1, 2))
plot(m2, c(3, 5))
pi2 <- predict(m2, data.frame(Crews = c(2, 4)), interval = "prediction")
plot(sqrtRooms ~ sqrtCrews, data = cleaning2, pch = 16, col = "darkgreen")
pi2 <- predict(m2, data.frame(sqrtCrews = c(2, 4)), interval = "prediction")
plot(sqrtRooms ~ sqrtCrews, data = cleaning2, pch = 16, col = "darkgreen")
abline(m2, lwd = 2)
lines(c(2, 2), c(pi[1, 2], pi[1, 3]), col = "tomato", lwd = 2)
lines(c(4, 4), c(pi[2, 2], pi[2, 3]), col = "tomato", lwd = 2)
pi2 <- predict(m2, data.frame(sqrtCrews = c(2, 4)), interval = "prediction")
plot(sqrtRooms ~ sqrtCrews, data = cleaning2, pch = 16, col = "darkgreen")
abline(m2, lwd = 2)
lines(c(2, 2), c(sqrt(pi[1, 2]), sqrt(pi[1, 3])), col = "tomato", lwd = 2)
lines(c(4, 4), c(sqrt(pi[2, 2]), sqrt(pi[2, 3])), col = "tomato", lwd = 2)
pi2 <- predict(m2, data.frame(sqrtCrews = c(2, 4)), interval = "prediction")
plot(sqrtRooms ~ sqrtCrews, data = cleaning2, pch = 16, col = "darkgreen")
abline(m2, lwd = 2)
lines(c(2, 2), c(sqrt(pi2[1, 2]), sqrt(pi2[1, 3])), col = "tomato", lwd = 2)
lines(c(4, 4), c(sqrt(pi2[2, 2]), sqrt(pi2[2, 3])), col = "tomato", lwd = 2)
pi2 <- predict(m2, data.frame(sqrtCrews = c(2, 4)), interval = "prediction")
plot(sqrtRooms ~ sqrtCrews, data = cleaning2, pch = 16, col = "darkgreen")
abline(m2, lwd = 2)
lines(c(2, 2), c(pi2[1, 2], pi2[1, 3]), col = "tomato", lwd = 2)
lines(c(4, 4), c(pi2[2, 2], pi2[2, 3]), col = "tomato", lwd = 2)
pi
pi2^2
