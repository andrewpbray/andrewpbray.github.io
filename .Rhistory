text(25, 20, "x* = 24")
lines(c(12, 28), rep(m1$coef[1] + m1$coef[2] * 24, 2), lty = 2, col = "darkgrey")
it <- 5000
coef_mat <- matrix(rep(NA, it * 2), ncol = 2)
for(i in 1:it) {
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma)
coef_mat[i, ] <- lm(f_data ~ x)$coef
}
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
for(i in 1:it) {
abline(coef_mat[i, 1], coef_mat[i, 2], col = rgb(0, 0, 0, 0.02))
}
abline(m1, lwd = 2, col = "darkgreen")
xx <- seq(12, 28, .2)
int_mat <- predict(m1, data.frame(x = xx), interval = "confidence")
lines(xx, int_mat[, 2], lty = 2, col = "darkgreen")
lines(xx, int_mat[, 3], lty = 2, col = "darkgreen")
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
set.seed(447)
n <- 60
beta_0 <- 12
beta_1 <- .7
sigma <- 2
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x # mean function
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
m1 <- lm(f_data~x)
abline(m1, lwd = 2, col = "darkgreen")
text(27, 32, expression(hat(y)["\u2217"]))
text(27, 32, expression(paste(hat(y)["\u2217"])))
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
m1 <- lm(f_data~x)
abline(m1, lwd = 2, col = "darkgreen")
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
set.seed(447)
n <- 60
beta_0 <- 12
beta_1 <- .7
sigma <- 2
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x # mean function
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
m1 <- lm(f_data~x)
abline(m1, lwd = 2, col = "darkgreen")
text(27, 32, expression(paste(hat(y)["\u2217"])))
text(27, 32, expression(paste(hat(y)[textstyle("*")])))
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
set.seed(447)
n <- 60
beta_0 <- 12
beta_1 <- .7
sigma <- 2
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x # mean function
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
m1 <- lm(f_data~x)
abline(m1, lwd = 2, col = "darkgreen")
text(27, 32, hat(y))
text(27, 32, expression(hat(y)))
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
lines(c(24, 24), c(17, 35), lty = 2, col = "darkgrey")
text(27, 32, expression(hat(y)))
text(25, 20, "x* = 24")
lines(c(12, 28), rep(m1$coef[1] + m1$coef[2] * 24, 2), lty = 2, col = "darkgrey")
text(13, m1$coef[1] + m1$coef[2] * 24 + 1, expression(paste(hat(y)[textstyle("*")]))) # label me
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
lines(c(24, 24), c(17, 35), lty = 2, col = "darkgrey")
text(27, 32, expression(hat(y)))
text(25, 20, "x* = 24")
lines(c(12, 28), rep(m1$coef[1] + m1$coef[2] * 24, 2), lty = 2, col = "darkgrey")
text(13, m1$coef[1] + m1$coef[2] * 24 + 1, expression(paste(hat(y)[textstyle("*")])))
m1 <- lm(f_data~x)
x_star <- 24
m1$coef[1] + m1$coef[2] * x_star
predict(m1, data.frame(x = x_star), interval = "confidence")
text(13, m1$coef[1] + m1$coef[2] * 24 + 1,
expression(paste(hat(y)[textstyle("*")], " = ", round(m1$coef[1] + m1$coef[2] * x_star)))
)
text(13, m1$coef[1] + m1$coef[2] * 24 + 1,
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
lines(c(24, 24), c(17, 35), lty = 2, col = "darkgrey")
text(27, 32, expression(hat(y)))
text(25, 20, "x* = 24")
lines(c(12, 28), rep(m1$coef[1] + m1$coef[2] * 24, 2), lty = 2, col = "darkgrey")
text(13, m1$coef[1] + m1$coef[2] * 24 + 1,
paste(expression(hat(y)[textstyle("*")], " = ", round(m1$coef[1] + m1$coef[2] * x_star))))
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
lines(c(24, 24), c(17, 35), lty = 2, col = "darkgrey")
text(27, 32, expression(hat(y)))
text(25, 20, "x* = 24")
lines(c(12, 28), rep(m1$coef[1] + m1$coef[2] * 24, 2), lty = 2, col = "darkgrey")
text(13, m1$coef[1] + m1$coef[2] * 24 + 1,
paste(expression(hat(y)[textstyle("*")], " = ", round(m1$coef[1] + m1$coef[2] * x_star))))
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
lines(c(24, 24), c(17, 35), lty = 2, col = "darkgrey")
text(27, 32, expression(hat(y)))
text(25, 20, "x* = 24")
lines(c(12, 28), rep(m1$coef[1] + m1$coef[2] * 24, 2), lty = 2, col = "darkgrey")
text(13, m1$coef[1] + m1$coef[2] * 24 + 1,
expression(paste(hat(y)[textstyle("*")]))))
text(13, m1$coef[1] + m1$coef[2] * 24 + 1,
expression(paste(hat(y)[textstyle("*")])))
points(x_star, m1$coef[1] + m1$coef[2] * x_star, col = "green", pch = 16)
ci <- predict(m1, data.frame(x = x_star), interval = "confidence")
ci[1]
lines(rep(x_star, 2), ci[2:3])
lines(rep(x_star, 2), ci[2:3], col = "green")
lines(rep(x_star, 2), ci[2:3], col = "green", lwd = 2)
lines(c(x_star - .02, x_star + .02), rep(ci[2], 2))
lines(c(x_star - .05, x_star + .05), rep(ci[2], 2))
lines(c(x_star - .3, x_star + .3), rep(ci[2], 2))
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
lines(c(24, 24), c(17, 35), lty = 2, col = "darkgrey")
text(27, 32, expression(hat(y)))
text(25, 20, "x* = 24")
lines(c(12, 28), rep(m1$coef[1] + m1$coef[2] * 24, 2), lty = 2, col = "darkgrey")
text(13, m1$coef[1] + m1$coef[2] * 24 + 1, expression(paste(hat(y)[textstyle("*")])))
ci <- predict(m1, data.frame(x = x_star), interval = "confidence")
points(x_star, ci[1], col = "green", pch = 16)
lines(rep(x_star, 2), ci[2:3], col = "green", lwd = 2)
lines(c(x_star - .3, x_star + .3), rep(ci[2], 2), col = "green")
lines(c(x_star - .3, x_star + .3), rep(ci[3], 2), col = "green")
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
xx <- seq(12, 28, .2)
int_mat <- predict(m1, data.frame(x = xx), interval = "confidence")
lines(xx, int_mat[, 2], lty = 2, col = "darkgreen")
lines(xx, int_mat[, 3], lty = 2, col = "darkgreen")
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
xx <- seq(12, 28, .2)
int_mat <- predict(m1, data.frame(x = xx), interval = "confidence")
lines(xx, int_mat[, 2], lty = 2, col = "darkgreen")
lines(xx, int_mat[, 3], lty = 2, col = "darkgreen")
lines(c(24, 24), c(17, 35), lty = 2, col = "darkgrey")
text(25, 20, "x* = 24")
ci <- predict(m1, data.frame(x = x_star), interval = "confidence")
points(x_star, ci[1], col = "green", pch = 16)
lines(rep(x_star, 2), ci[2:3], col = "green", lwd = 2)
lines(c(x_star - .3, x_star + .3), rep(ci[2], 2), col = "green")
lines(c(x_star - .3, x_star + .3), rep(ci[3], 2), col = "green")
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
lines(c(24, 24), c(17, 35), lty = 2, col = "darkgrey")
text(27, 32, expression(hat(y)))
text(25, 20, "x* = 24")
lines(c(12, 28), rep(m1$coef[1] + m1$coef[2] * 24, 2), lty = 2, col = "darkgrey")
text(13, m1$coef[1] + m1$coef[2] * 24 + 1, expression(paste(hat(y)[textstyle("*")])))
pi <- predict(m1, data.frame(x = x_star), interval = "prediction")
lines(rep(x_star, 2), pi[2:3], col = "violet4", lwd = 2)
colors()
lines(rep(x_star, 2), pi[2:3], col = "violetred", lwd = 2)
lines(rep(x_star, 2), pi[2:3], col = "violetred", lwd = 2)
lines(c(x_star - .3, x_star + .3), rep(pi[2], 2), col = "violetred")
lines(c(x_star - .3, x_star + .3), rep(pi[3], 2), col = "violetred")
lines(c(x_star - .3, x_star + .3), rep(pi[2], 2), col = "violetred", lwd = 2)
lines(c(x_star - .3, x_star + .3), rep(pi[3], 2), col = "violetred", lwd = 2)
ci <- predict(m1, data.frame(x = x_star), interval = "confidence")
points(x_star, ci[1], col = "green", pch = 16)
lines(rep(x_star, 2), ci[2:3], col = "green", lwd = 2)
lines(c(x_star - .3, x_star + .3), rep(ci[2], 2), col = "green")
lines(c(x_star - .3, x_star + .3), rep(ci[3], 2), col = "green")
lines(rep(x_star, 2), ci[2:3], col = "darkseagreen", lwd = 2)
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
lines(c(24, 24), c(17, 35), lty = 2, col = "darkgrey")
text(27, 32, expression(hat(y)))
text(25, 20, "x* = 24")
lines(c(12, 28), rep(m1$coef[1] + m1$coef[2] * 24, 2), lty = 2, col = "darkgrey")
text(13, m1$coef[1] + m1$coef[2] * 24 + 1, expression(paste(hat(y)[textstyle("*")])))
pi <- predict(m1, data.frame(x = x_star), interval = "prediction")
lines(rep(x_star, 2), pi[2:3], col = "violetred", lwd = 2)
lines(c(x_star - .3, x_star + .3), rep(pi[2], 2), col = "violetred", lwd = 2)
lines(c(x_star - .3, x_star + .3), rep(pi[3], 2), col = "violetred", lwd = 2)
ci <- predict(m1, data.frame(x = x_star), interval = "confidence")
points(x_star, ci[1], col = "green", pch = 16)
lines(rep(x_star, 2), ci[2:3], col = "green", lwd = 2)
lines(c(x_star - .3, x_star + .3), rep(ci[2], 2), col = "green")
lines(c(x_star - .3, x_star + .3), rep(ci[3], 2), col = "green")
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
ci_mat <- predict(m1, data.frame(x = xx), interval = "confidence")
lines(xx, ci_mat[, 2], lty = 2, col = "darkgreen")
lines(xx, ci_mat[, 3], lty = 2, col = "darkgreen")
pi_mat <- predict(m1, data.frame(x = xx), interval = "prediction")
lines(xx, pi_mat[, 2], lty = 2, col = "violet")
lines(xx, pi_mat[, 3], lty = 2, col = "violet")
text(26, 26, "CI")
text(26, 28, "CI")
?legend
legend(26, 20, legend = c("CI", "PI"), col = c("darkgreen", "violet"),
lty = 2, lwd = 2)
legend(26, 20, legend = c("CI", "PI"), col = c("darkgreen", "violet"),
lty = 2, lwd = 2, bty = "n")
?legend
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = rgb(70/255, 130/255, 180/255, 1)) # add generated data
abline(m1, lwd = 2, col = "darkgreen")
ci_mat <- predict(m1, data.frame(x = xx), interval = "confidence")
lines(xx, ci_mat[, 2], lty = 2, col = "darkgreen")
lines(xx, ci_mat[, 3], lty = 2, col = "darkgreen")
pi_mat <- predict(m1, data.frame(x = xx), interval = "prediction")
lines(xx, pi_mat[, 2], lty = 2, col = "violet")
lines(xx, pi_mat[, 3], lty = 2, col = "violet")
legend(26, 20, legend = c("CI", "PI"), col = c("darkgreen", "violet"),
lty = 2, lwd = 2, bty = "n")
legend(23, 20, legend = c("CI", "PI"), col = c("darkgreen", "violet"),
lty = 2, lwd = 2, bty = "n")
indicators <- read.table("C:/Users/Andrew/Dropbox/Teaching/github-pages/andrewpbray.github.io/indicators.txt", header=TRUE, quote="\"")
View(indicators)
ln <- lm(Time ~ Invoices, data = invoices)
invoices <- read.delim("C:/Users/Andrew/Dropbox/Teaching/github-pages/andrewpbray.github.io/invoices.txt")
View(invoices)
invoices <- read.delim("invoices.txt")
ln <- lm(Time ~ Invoices, data = invoices)
names(invoics)
names(invoices)
beta_0 <- In$coef[1]
alpha <- .05
n<-30
t_stat <- qt(1-alpha/2, n - 2)
SE <- summary(In)$coef[1,2]
moe <- t_stat * SE
c(beta_0 - moe, beta_0 + moe)
invoices <- read.delim("invoices.txt")
In <- lm(Time ~ Invoices, data = invoices)
beta_0 <- In$coef[1]
alpha <- .05
n<-30
t_stat <- qt(1-alpha/2, n - 2)
SE <- summary(In)$coef[1,2]
moe <- t_stat * SE
c(beta_0 - moe, beta_0 + moe)
confint(In)
playbill <- read.csv("playbill.csv")
m1 <- lm(CurrentWeek ~ LastWeek, data = playbill)
SE_beta1 <- summary(m1)$coef[2, 2]
t_crit <- qt(.975, nrow(playbill) - 2)
beta_1 <- m1$coef[2]
c(beta_1 - t_crit * SE_beta1, beta_1 + t_crit * SE_beta1)
confint(m1, "LastWeek")
beta_0_null <- 10000
SE_beta0 <- summary(m1)$coef[1, 2]
t_stat <- (m1$coef[1] - beta_0_null)/SE_beta0
pval <- pt(t_stat, df = nrow(playbill) - 2) * 2
t_stat
pval
x_star <- 400000
predict(m1, data.frame("LastWeek" = x_star), interval = "prediction")
indicators <- read.table("indicators.txt", header=TRUE, quote="\"")
names(indicators)
indicators <- read.table("indicators.txt", header=TRUE, quote="\"")
m2 <- lm(PriceChange ~ LoanPaymentOverdue, data = invoices)
confint(m2, "LoanPaymentOverdue")
indicators <- read.table("indicators.txt", header=TRUE, quote="\"")
m2 <- lm(PriceChange ~ LoanPaymentOverdue, data = indicators)
m2 <- lm(PriceChange ~ LoanPaymentsOverdue, data = indicators)
confint(m2, "LoanPaymentOverdue")
View(indicators)
confint(m2, "LoanPaymentsOverdue")
predict(m2, data.frame("LoanPaymentsOverdue" = 4), interval = "confidence")
plot(PriceChange ~ LoanPaymentsOverdue, data = indicators)
summary(m1)
indicators
ci <- predict(m2, data.frame("LoanPaymentsOverdue" = 4), interval = "confidence")
ci
invoices <- read.delim("invoices.txt")
In <- lm(Time ~ Invoices, data = invoices)
plot(Time ~ Invoices, data = invoices)
invoices <- read.delim("invoices.txt")
m1 <- lm(Time ~ Invoices, data = invoices)
beta_0_hat <- m1$coef[1]
t_stat <- qt(.975, nrow(invoices) - 2)
SE <- summary(m1)$coef[1,2]
invoices <- read.delim("invoices.txt")
m3 <- lm(Time ~ Invoices, data = invoices)
beta_0_hat <- m3$coef[1]
t_stat <- qt(.975, nrow(invoices) - 2)
SE <- summary(m3)$coef[1,2]
invoices <- read.delim("invoices.txt")
m3 <- lm(Time ~ Invoices, data = invoices)
beta_0_hat <- m3$coef[1]
t_stat <- qt(.975, nrow(invoices) - 2)
SE <- summary(m3)$coef[1,2]
ci <- c(beta_0_hat - t_stat * SE, beta_0_hat + t_stat * SE)
ci
t_stat
beta_1_null <- .01
beta_1_hat <- m3$coef[2]
SE <- summary(m3)$coef[2, 2]
t_stat <- (beta_1_hat - beta_1_null) / SE
t_stat
pval <- (1 - pt(t_stat, nrow(invoices) - 2)) * 2
pval
pi  <- predict(m3, data.frame("Invoices" = 130), interval = "prediction")
pi
data(anscombe)
plot(anscombe)
names(anscomb)
names(anscombe)
plot(x1, y1, data = anscombe)
plot(x2, y2, data = anscombe)
plot(x3, y3, data = anscombe)
plot(x4, y4, data = anscombe)
plot(y1 ~ x1, data = anscombe)
par(mfrow = c(2, 2))
plot(y1 ~ x1, data = anscombe)
plot(y2 ~ x2, data = anscombe)
plot(y3 ~ x3, data = anscombe)
plot(y4 ~ x4, data = anscombe)
m1 <- lm(y1 ~ x1, data = anscombe)
m2 <- lm(y2 ~ x2, data = anscombe)
m3 <- lm(y3 ~ x3, data = anscombe)
m4 <- lm(y4 ~ x4, data = anscombe)
summary(m1)
summary(m2)
summary(m3)
summary(m4)
?anscombe
ff <- y ~ x
mods <- setNames(as.list(1:4), paste0("lm", 1:4))
for(i in 1:4) {
ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
## or   ff[[2]] <- as.name(paste0("y", i))
##      ff[[3]] <- as.name(paste0("x", i))
mods[[i]] <- lmi <- lm(ff, data = anscombe)
print(anova(lmi))
}
op <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))
for(i in 1:4) {
ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
plot(ff, data = anscombe, col = "red", pch = 21, bg = "orange", cex = 1.2,
xlim = c(3, 19), ylim = c(3, 13))
abline(mods[[i]], col = "blue")
}
mtext("Anscombe's 4 Regression data sets", outer = TRUE, cex = 1.5)
par(op)
summary(lm(y1 ~ x1, data = anscombe))
summary(lm(y2 ~ x2, data = anscombe))
summary(lm(y3 ~ x3, data = anscombe))
summary(lm(y4 ~ x4, data = anscombe))
summary(lm <- (y1 ~ x1, data = anscombe))
summary(m1 <- lm(y1 ~ x1, data = anscombe))
plot(anscombe$x1, m1$res)
plot(m1)[1]
plot(m1)[[1]]
?plot.lm
plot(m1, 1)
ff <- y ~ x
mods <- setNames(as.list(1:4), paste0("lm", 1:4))
for(i in 1:4) {
ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
mods[[i]] <- lmi <- lm(ff, data = anscombe)
}
op <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))
for(i in 1:4) {
plot(mods[[i]], 1)
#ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
#plot(ff, data = anscombe, col = "red", pch = 21, bg = "orange", cex = 1.2,
#     xlim = c(3, 19), ylim = c(3, 13))
#abline(mods[[i]], col = "blue")
}
par(op)
plot(anscombe$x1, m1$res) # x versus residuals
plot(m1$fit, m1$res)
plot(m1, 1) # built-in function
plot(m1, 2)
qqnorm(rnorm(30))
abline(1,0)
abline(0, 1)
qqline()
?qqline
x <- rt(30, 2)
qqnorm(x)
qqline(x)
?qt
x <- rt(30, 1)
qqnorm(x)
qqline(x)
x <- rt(30, 1)
qqnorm(x)
qqline(x)
par(mfrow = c(1, 2))
plot(m1, 1:2)
indicators <- read.table("indicators.txt", header=TRUE, quote="\"")
plot(PriceChange ~ LoanPaymentsOverdue, data = indicators)
plot(PriceChange ~ LoanPaymentsOverdue, data = indicators)
invoices <- read.delim("invoices.txt")
m3 <- lm(Time ~ Invoices, data = invoices)
plot(Time ~ Invoices, data = invoices)
plot(m3)
data(quakes)
names(quakes)
plot(stations ~ mag, data = equakes)
plot(stations ~ mag, data = quakes)
m1 <- lm(stations ~ mag, data = quakes)
plot(m1)
m1 <-  lm(tourist_spending ~ visitor_count_tho, data=tourism)
p1 <- xyplot(tourist_spending ~ visitor_count_tho, data=tourism, xlab="Number of Tourists (thousands)", ylab="Tourist Spending (millions of $)", type=c("p", "r"), pch=19)
p2 <- xyplot(residuals(mod.t) ~ visitor_count_tho, data=tourism, xlab="Number of Tourists (thousands)", type=c("p", "r"), pch=19)
p3 <- histogram(~residuals(mod.t), fit="normal")
print(p1, position = c(0, 0.4, 0.5, 1), more=TRUE)
print(p2, position = c(0, 0, 0.5, 0.4), more=TRUE)
tourism <- read.csv("http://math.smith.edu/~bbaumer/mth241/tourism.csv")
m1 <-  lm(tourist_spending ~ visitor_count_tho, data=tourism)
p1 <- xyplot(tourist_spending ~ visitor_count_tho, data=tourism, xlab="Number of Tourists (thousands)", ylab="Tourist Spending (millions of $)", type=c("p", "r"), pch=19)
library(mosaic)
tourism <- read.csv("http://math.smith.edu/~bbaumer/mth241/tourism.csv")
m1 <-  lm(tourist_spending ~ visitor_count_tho, data=tourism)
p1 <- xyplot(tourist_spending ~ visitor_count_tho, data=tourism, xlab="Number of Tourists (thousands)", ylab="Tourist Spending (millions of $)", type=c("p", "r"), pch=19)
p2 <- xyplot(residuals(mod.t) ~ visitor_count_tho, data=tourism, xlab="Number of Tourists (thousands)", type=c("p", "r"), pch=19)
p3 <- histogram(~residuals(mod.t), fit="normal")
print(p1, position = c(0, 0.4, 0.5, 1), more=TRUE)
print(p2, position = c(0, 0, 0.5, 0.4), more=TRUE)
print(p3, position = c(0.5, 0, 1, 1))
```
p1 <- xyplot(tourist_spending ~ visitor_count_tho, data=tourism, xlab="Number of Tourists (thousands)", ylab="Tourist Spending (millions of $)", type=c("p", "r"), pch=19)
p2 <- xyplot(residuals(mod.t) ~ visitor_count_tho, data=tourism, xlab="Number of Tourists (thousands)", type=c("p", "r"), pch=19)
require(mosaic)
data(RailTrail)
data()
require(mosaicData)
data(RailTrails)
data()
q()
require(mosaic)
data(RailTrail)
require(mosaicData)
data(RailTrail)
RailTrail
require(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
data(diamonds)
require(diamonds)
data(diamonds)
require(ggplot2)
data(diamonds)
require(alr3)
data(BigMac2003)
class(BigMac2003)
worldcities <- BigMac2003
write.csv(worldcities, file = "worldcities.csv", row.names = TRUE)
write.csv(worldcities, file = "data/worldcities.csv", row.names = TRUE)
worldcities <- read.csv("andrewpbray.github.io/data/worldcities.csv")
worldcities <- read.csv("www.andrewpbray.github.io/data/worldcities.csv")
worldcities <- read.csv("http://www.andrewpbray.github.io/data/worldcities.csv")
worldcities <- read.csv("http://andrewpbray.github.io/data/worldcities.csv")
View(worldcities)
worldcities <- read.csv("http://andrewpbray.github.io/data/worldcities.csv", row.names = TRUE)
?read.csv
rownames(worldcities)
worldcities <- read.csv("http://andrewpbray.github.io/data/worldcities.csv", header = TRUE)
rownames(worldcities)
worldcities <- read.csv("http://andrewpbray.github.io/data/worldcities.csv", row.names = 1)
rownames(worldcities)
?BigMac2003
names(worldcities)
head(worldcities)
names(worldcities)
plot(BigMac ~ Bread, data = worldcities)
hist(worldcities $ Apt)
poverty <- read.table("http://www.math.smith.edu/~bbaumer/mth241/poverty.txt")
poverty <- read.delim("http://www.math.smith.edu/~bbaumer/mth241/poverty.txt")
View(poverty)
library(faraway)
data(twins)
?twins
write.csv(twins, file = "data/twins.csv")
?twins
names(twins)
setwd("C:/Users/Andrew/Dropbox/Teaching/Smith/mth220-s14/Mine's notes/Slides/(6) Unit 6/Lec 2/figures/la")
load("C:/Users/Andrew/Dropbox/Teaching/Smith/mth220-s14/Mine's notes/Slides/(6) Unit 6/Lec 2/figures/la/shpData10.RData")
str(shpData)
names(shpData)
a <- shpData$Prop_EduHigherThan16th
b <- shpData$Prop_RaceEthHispanic
la <- data.frame("education" = a, "hispanic" = b)
head(lka)
head(la)
plot(education ~ hispanic, data = la)
setwd("C:/Users/Andrew/Dropbox/Teaching/github-pages/andrewpbray.github.io")
write.csv(la, "LAed.csv")
twins <- read.csv("http://andrewpbray.github.io/data/twins.csv")
View(twins)
twins <- read.csv("http://andrewpbray.github.io/data/twins.csv", row.names = FALSE)
?read.csv
twins <- read.csv("http://andrewpbray.github.io/data/twins.csv")
twins
LA <- read.csv("http://andrewpbray.github.io/data/LAed.csv")
head(LA)
