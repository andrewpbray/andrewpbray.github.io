1831-1454
LA <–read.csv(“http://bit.ly/
chance_LAhomes”)
plot(price ~ sqft, data = LA)
LA <–read.csv(“http://bit.ly/chance_LAhomes")
LA <–read.csv("http://bit.ly/chance_LAhomes")
LA <- read.csv("http://bit.ly/chance_LAhomes")
LA <- read.csv(url("http://bit.ly/chance_LAhomes"))
?read.csv
LA <- read.csv(url("http://bit.ly/chance_LAhomes"))
warnings()
library(RCurl)
install.packages("RCurl")
library(RCurl)
LA <- read.csv(getURL("http://bit.ly/chance_LAhomes"))
LA <- read.csv("https://stat.duke.edu/~mc301/data/LAhomes.csv")
LA <- read.csv(getURL("https://stat.duke.edu/~mc301/data/LAhomes.csv"))
setwd("~/Dropbox/Teaching/github-pages/andrewpbray.github.io")
download.file("http://www.openintro.org/stat/data/nc.RData", destfile = "nc.RData")
load("nc.RData")
require(mosaic)
?mmap
?mplot
mplot(nc)
barplot(table(nc$gender))
mplot(nc)
densityplot(weight, data = nc)
names(nc)
?densityplot
densityplot(~ weight, data = nc)
histogram(~ weight, data = nc)
require(stats)
data(singer)
head(singer)
histogram(~ weight, data = nc, breaks = 30)
bwplot(~ weight, data = nc, breaks = 30)
mplot(nc)
data(anscombe)
head(anscombe)
?mode
barplot(table(nc$premie))
ggplot(nc, aes(y = premie)) +
geom_bar()
ggplot(nc, aes(premie)) +
geom_bar()
barchart(premie, data = nc)
barchart(~ premie, data = nc)
?barchart
barchart(~ premie, data = nc)
barchart(~ premie, data = nc, stack = FALSE)
ggplot(nc, aes(premie)) +
geom_bar()
pie(nc$premie)
pie(table(nc$premie))
hist(nc$weight)
ggplot(nc, aes(weight)) + geom_histogram()
plot(density(nc$weight))
ggplot2(nc, aes(weight)) + geom_density()
ggplot(nc, aes(weight)) + geom_density()
boxplot(nc$weight)
ggplot(nc, aes(weight)) + geom_boxplot()
ggplot(nc, aes(y = weight, x = factor(1))) + geom_boxplot()
plot(x = nc$weeks, y = nc$weight)
plot(weight ~ weeks, data = nc)
ggplot(nc, aes(x = weeks, y = weight)) + geom_points()
ggplot(nc, aes(x = weeks, y = weight)) + geom_point()
mplot(nc)
ggplot(nc, aes(x = fage, y = mage)) + geom_point()
mplot(nc)
ggplot(nc, aes(x = fage, y = mage)) + geom_point()
mplot(mtcars, default="histogram")
mplot(mtcars)
?mplot
mplot(mtcars, default="histogram")
d <- read.csv("submit-times.csv")
head(d)
class(d)
class(d[,1])
d <- as.character(d)
class(d)
head(d)
d <- as.character(d)
d <- as.character(d[,1])
d <- read.csv("submit-times.csv")
d <- as.character(d[,1])
head(d)
?strsplit
a <- strplit(d, ",")
a <- strsplit(d, ",")
a[[1]]
a[1]
a <- strsplit(d, ", ")
a[1]
a[[c(1, 2)]]
a[[, 2]]
a <- unlist(strsplit(d, ", "))
length(a)
class(a)
length(d)
56*3
d
d <- as.character(d[,1])
a <- gsub(d, "-", "NA, NA, NA")
a <- unlist(strsplit(d, ", "))
?gsub
d <- as.character(d[,1])
a <- gsub("-", "NA, NA, NA", d)
d <- read.csv("submit-times.csv")
d <- as.character(d[,1])
a <- gsub("-", "NA, NA, NA", d)
a <- unlist(strsplit(d, ", "))
a
a <- gsub("-", "0, 0, 0", d)
a <- unlist(strsplit(d, ", "))
a
d <- as.character(d[,1])
a <- gsub("-", "0, 0, 0", d)
d <- read.csv("submit-times.csv")
d <- as.character(d[,1])
a <- gsub("-", "0, 0, 0", d)
a
a <- unlist(strsplit(d, ", "))
a
a <- unlist(strsplit(a, ", "))
a
d <- read.csv("submit-times.csv")
d <- as.character(d[,1])
a <- gsub("-", "0, 0, 0", d)
a <- unlist(strsplit(a, ", "))
a
d
d <- read.csv("submit-times.csv")
d <- as.character(d[,1])
d <- d[d != "-"]
d
d <- read.csv("submit-times.csv")
d <- as.character(d[,1])
a <- d[d != "-"]
datestamp <- unlist(strsplit(a, ", "))[seq(2, length(a), 3)]
datestamp
d <- read.csv("submit-times.csv")
d <- as.character(d[,1])
a <- d[d != "-"]
length(a)
datestamp <- unlist(strsplit(a, ", "))[seq(2, length(a)*3, 3)]
datestamp
timestamp <- unlist(strsplit(a, ", "))[seq(3, length(a)*3, 3)]
timestamp
POSIXlt
?POSIXlt
data(diamonds)
require(ddplyr)
require(dplyr)
data(diamonds)
data(diamond)
require(ggplot2)
data(diamonds)
data(diamonds)
?diamonds
str(diamonds)
class(cut$diamonds)
class(cut$diamond)
class(diamonds$cut)
levels(diamonds$color)
levels(diamonds$cut)
table(diamonds$cut)
plot(carat ~ table, data = diamonds)
barplot(table(cut))
barplot(table(diamonds$cut))
plot(density(diamonds$price))
str(diamonds)
mplot(diamonds)
library(mosaic)
mplot(diamonds)
levels(diamonds$cut)
download.file("http://www.openintro.org/stat/data/nc.RData", destfile = "nc.RData")
load("nc.RData")
mplot(nc, default = "histogram")
require(mosaic)
download.file("http://www.openintro.org/stat/data/nc.RData", destfile = "nc.RData")
load("nc.RData")
mplot(nc, default = "histogram")
install.packages("manipulate")
install.packages("manipulate")
install.packages("mosaic")
require(mosaic)
load("nc.RData")
mplot(nc, default = "histogram")
mplot(quakes, default = "histogram")
install.packages("rgl")
install.packages("gridExtra")
install.packages("ks")
install.packages("scatterplot3d")
library(rgl)
plot3d(iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, col="red", size=3)
library(ks)
fhat <- kde(x=iris[,1:3])
plot(fhat)
library(rgl)
plot3d(iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, col="red", size=3)
library(ks)
fhat <- kde(x=iris[,1:3])
plot(fhat)
library(rgl)
plot3d(iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, col="red", size=3)
library(ks)
fhat <- kde(x=iris[,1:3])
plot(fhat)
d <- read.table("http://www.stat.tamu.edu/~sheather/book/docs/datasets/production.txt")
d
d <- read.table("http://www.stat.tamu.edu/~sheather/book/docs/datasets/production.txt",
header = TRUE)
d
plot(RunTime ~ RunSize)
ggplot(d, aes(x = RunSize, y = RunTime)) + geom_points()
library(ggplot2)
ggplot(d, aes(x = RunSize, y = RunTime)) + geom_points()
ggplot(d, aes(x = RunSize, y = RunTime)) + geom_point()
ggplot(d, aes(x = RunSize, y = RunTime)) +
geom_points() +
theme_bw()
ggplot(d, aes(x = RunSize, y = RunTime)) +
geom_point() +
theme_bw()
ggplot(d, aes(x = RunSize, y = RunTime)) +
geom_point(color = "tomato") +
theme_bw()
ggplot(d, aes(x = RunSize, y = RunTime)) +
geom_point(color = "steelblue") +
theme_bw()
ggplot(d, aes(x = RunSize, y = RunTime)) +
geom_point(color = "tomato")
download.file("http://www.openintro.org/stat/data/mlb11.RData",
destfile = "mlb11.RData")
load("mlb11.RData")
plot(RunTime ~ RunSize, data = d)
plot(RunTime ~ RunSize, data = d, col = "tomato")
plot(RunTime ~ RunSize, data = d, col = "tomato", pch = 16)
plot(RunTime ~ RunSize, data = d, col = "steelblue", pch = 16)
download.file("http://www.openintro.org/stat/data/mlb11.RData",
destfile = "mlb11.RData")
load("mlb11.RData")
plot(d$RunSize, d$RunTime, col = "steelblue", pch = 16)
plot_ss(d$RunSize, d$RunTime)
plot_ss(d$RunSize, d$RunTime)
plot_ss(d$RunSize, d$RunTime, showSquares = TRUE)
plot_ss(d$RunSize, d$RunTime, leastSquares = TRUE)
m1 <- lm(RunTime ~ RunSize, data = d)
poverty <- read.csv("andrewpbray.github.io/poverty.txt", sep = "nt")
poverty <- read.csv("http://www.andrewpbray.github.io/poverty.txt", sep = "nt")
poverty <- read.csv("andrewpbray.github.io/poverty.txt", sep = "nt")
poverty <- read.csv("andrewpbray.github.io/poverty.txt", sep = "nt")
poverty <- read.csv("http://www.andrewpbray.github.io/poverty.txt", sep = "nt")
poverty <- read.csv("https://www.andrewpbray.github.io/poverty.txt", sep = "nt")
poverty <- read.table("andrewpbray.github.io/poverty.txt", header = T)
poverty <- read.table("poverty.txt", header = T)
poverty <- read.csv("https://raw.githubusercontent.com/andrewpbray/andrewpbray.github.io/master/poverty.txt", sep = "nt")
require(RCurl)
poverty <- read.csv(getURL("https://raw.githubusercontent.com/andrewpbray/andrewpbray.github.io/master/poverty.txt"), sep = "nt")
poverty <- read.csv("http://andrewpbray.github.io/poverty.txt"), sep = "nt")
poverty <- read.csv("http://andrewpbray.github.io/poverty.txt", sep = "nt")
poverty <- read.table("http://andrewpbray.github.io/poverty.txt", sep = "nt")
poverty <- read.table("http://andrewpbray.github.io/poverty.txt", header = T)
?read.csv
poverty <- read.delim("http://andrewpbray.github.io/poverty.txt", header = T)
View(poverty)
names(poverty)
plot(poverty$Poverty, poverty$Graduates)
plot(poverty$Poverty, poverty$Graduates)
identify()
identify(poverty$Poverty, poverty$Graduates)
plot(poverty$Poverty, poverty$Graduates, pch = 16, col = "steelblue")
plot_ss(poverty$Poverty, poverty$Graduates)
nrows(ggplot2)
require(ggplot2)
data(diamonds)
barplot(table(diamonds$cut))
ggplot(diamonds, aes(price)) + geom_smooth()
mplot(diamonds, default = "histogram")
library(mosaic)
mplot(diamonds, default = "histogram")
qplot(data=diamonds, x=price, geom="line", stat="density", adjust=0.4)
price_g <- mean(diamonds$price[diamonds$cut == "Good"])
price_vg <- mean(diamonds$price[diamonds$cut == "Very Good"])
price_g
price_vg
mplot(diamonds)
ggplot(data = diamonds, aes(x = carat, y = price)) + geom_points
ggplot(data = diamonds, aes(x = carat, y = price)) + geom_point()
ggplot(data = diamonds, aes(x = carat, y = price)) + geom_point(alpha = 1/10)
mplot(diamonds)
ggplot(data=diamonds, aes(x=carat, y=price)) +
geom_point(alpha = 1/5) +
facet_wrap(~cut, ncol=3)
library(mosaic)
mplot(diamonds)
ggplot(data=diamonds, aes(x=carat, y=price)) +
geom_point(alpha = 1/10) +
aes(colour=cut)
ggplot(data=diamonds, aes(x=carat, y=price)) +
geom_point(alpha = 1/4) +
aes(colour=cut)
dp5 <- diamonds[diamonds$carat < .55 & diamonds$carat > .45, ]
mplot(dp5)
nrow(dp5)
d1p5 <- diamonds[diamonds$carat < 1.55 & diamonds$carat > 1.45, ]
nrow(d1p5)
d1p5 <- diamonds[diamonds$carat < 1.55 & diamonds$carat > 1.45, ]
ggplot(data=d1p5, aes(x=cut, y=price)) +
geom_boxplot()
?rnorm
n <- 60
beta_0 <- 12
beta_1 <- 2
sigma_sq <- 4
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x
plot(x, f_mean, lty = 1)
plot(x, f_mean, lty = 1, asp = 1)
n <- 60
beta_0 <- 12
beta_1 <- 1.2
sigma_sq <- 4
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x
plot(x, f_mean, lty = 1, asp = 1)
n <- 60
beta_0 <- 12
beta_1 <- .8
sigma_sq <- 4
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x
plot(x, f_mean, lty = 1, asp = 1)
n <- 60
beta_0 <- 12
beta_1 <- .7
sigma_sq <- 4
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x
plot(x, f_mean, lty = 1, asp = 1)
f_mean <- beta_0 + beta_1 * x
f_data <- f_mean + rnorm(n, mean = 0, sd = sqrt(sigma_sq))
plot(x, f_data)
lines(x, f_mean)
n <- 60
beta_0 <- 12
beta_1 <- .7
sigma_sq <- 4
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x
f_data <- f_mean + rnorm(n, mean = 0, sd = sqrt(sigma_sq))
plot(x, f_data)
lines(x, f_mean)
?lines
plot(x, f_data)
abline(a = beta_0, b = beta_1)
plot(x, f_data, pch = 16, ylab = "y", xlab = "x", col = "steelblue")
abline(a = beta_0, b = beta_1, col = "orange", lwd = 2)
n <- 60
beta_0 <- 12
beta_1 <- .7
sigma <- 2
x <- rnorm(n, mean = 20, sd = 3)
f_mean <- beta_0 + beta_1 * x
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
points(x, f_data, pch = 16, ylab = "y", xlab = "x", col = "steelblue") # add observed data
abline(a = beta_0, b = beta_1, col = "orange", lwd = 2) # add mean function
20*.7+12
26-8
26+8
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), type = "n") # set up an empty plot
points(x, f_data, pch = 16, ylab = "y", xlab = "x", col = "steelblue") # add generated data
abline(a = beta_0, b = beta_1, col = "orange", lwd = 2) # add mean function
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = "steelblue") # add generated data
abline(a = beta_0, b = beta_1, col = "orange", lwd = 2) # add mean function
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = "steelblue") # add generated data
abline(a = beta_0, b = beta_1, col = "orange", lwd = 2) # add mean function
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = "steelblue") # add generated data
abline(a = beta_0, b = beta_1, col = "orange", lwd = 2) # add mean function
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = "steelblue") # add generated data
abline(a = beta_0, b = beta_1, col = "orange", lwd = 2) # add mean function
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma) # data generating function
plot(20, 25, xlim = c(12, 28), ylim = c(17, 35), ylab = "y", xlab = "x", type = "n") # set up an empty plot
points(x, f_data, pch = 16, col = "steelblue") # add generated data
abline(a = beta_0, b = beta_1, col = "orange", lwd = 2) # add mean function
m1 <- lm(f_data ~ x)
abline(m1, col = "blue")
m1$coef
it <- 500
coef_mat <- matrix(rep(NA, 5000 * 2), ncol = 2)
for(i in seq_along(it)) {
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma)
coef_mat[i, ] <- lm(f_data ~ x)$coef
}
coef_mat
it <- 500
coef_mat <- matrix(rep(NA, it * 2), ncol = 2)
for(i in seq_along(it)) {
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma)
coef_mat[i, ] <- lm(f_data ~ x)$coef
}
coef_mat
seq_along(it)
?seq_along
it <- 500
coef_mat <- matrix(rep(NA, it * 2), ncol = 2)
for(i in 1:it) {
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma)
coef_mat[i, ] <- lm(f_data ~ x)$coef
}
coef_mat
hist(coef_mat[,1])
hist(coef_mat[,2])
it <- 5000
coef_mat <- matrix(rep(NA, it * 2), ncol = 2)
for(i in 1:it) {
f_data <- f_mean + rnorm(n, mean = 0, sd = sigma)
coef_mat[i, ] <- lm(f_data ~ x)$coef
}
par(mfrow = c(1, 2))
hist(coef[, 1])
hist(coef[, 2])
par(mfrow = c(1, 2))
hist(coef_mat[, 1])
hist(coef_mat[, 2])
190-(70/94) * 1920
year <- 1920:2014
mu_weight <- -1239.787 + 70/94 * year
plot(mu_weight~year)
?data.frame
2014-1920
rep(1:3, each = 3)
year <- rep(1920:2014, each = n)
mu_weight <- -1239.787 + 70/94 * year # the increasing weight over time
n <- 300
year <- rep(1920:2014, each = n)
mu_weight <- -1239.787 + 70/94 * year # the increasing weight over time
length(mu_weight)
5*12
6*12+4
80/6
8/6
set.seed(498)
n <- 300
year <- rep(1920:2014, each = n)
mu_weight <- -1239.787 + 70/94 * year
weight <- rnorm(length(mu_weight), mean = mu_weight, sd = 13)
height <- 52 + .1 * weight + rnorm(length(mu_weight), mean = 0, sd = 1.3)
d <- data.frame(height = rep(NA, n * 94),
weight = rep(NA, n * 94),
year = year)
d <- data.frame(height, weight, year)
library(lattice)
plot(height ~ weight | year, data = d)
mplot(d)
library(mosaic)
mplot(d)
d <- data.frame(height, weight, year = factor(year))
mplot(d)
?write.csv
write.csv(nfl, "nfl.csv")
set.seed(498)
n <- 300
year <- rep(1920:2014, each = n)
mu_weight <- -1239.787 + 70/94 * year
weight <- rnorm(length(mu_weight), mean = mu_weight, sd = 13)
height <- 52 + .1 * weight + rnorm(length(mu_weight), mean = 0, sd = 1.3)
nfl <- data.frame(height, weight, year)
write.csv(nfl, "nfl.csv")
